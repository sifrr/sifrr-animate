{
  "current": 0,
  "showcases": [
    {
      "name": "simple",
      "variants": [
        {
          "variantId": 1,
          "style": "#element > p {\n  padding: 10px;\n  background: white;\n}",
          "code": "<p></p>",
          "elState": "// this = first element in given html\nSifrr.animate.animate({\n  target: this, \n  to: {\n    textContent: ['a 0 b 25 c 100', 'a 10 b 125 c 1017']\n  },\n  time: 1000,\n  round: true\n});",
          "variantName": "animate text content"
        },
        {
          "variantId": 2,
          "variantName": "animate style",
          "style": "#element > div {\n  padding: 10px;\n  background: white;\n  width: 60px;\n}",
          "code": "<div style=\"transform: translate(0px, 0px)\">move</div>",
          "elState": "// this = first element in given html\nSifrr.animate.animate({\n  target: this,\n  to: {\n    style: {\n      transform: 'translate(100px, 0px)'\n    }\n  },\n  time: 300,\n  type: 'easeOut'\n});"
        },
        {
          "variantId": 3,
          "variantName": "promise based",
          "style": "#element > * {\n  padding: 10px;\n  background: white;\n  width: 60px;\n}",
          "code": "<div style=\"transform: translate(50px, 0px);\">move</div>\n<p></p>",
          "elState": "// this = first element in given html\n// this = first element in given html\nSifrr.animate.animate({\n  target: this.style, \n  to: {\n    transform: 'translate(100px, 0px)'\n  },\n  time: 300,\n  type: 'easeOut'\n}).then(() => {\n  this.nextElementSibling.textContent ='moved';\n});"
        },
        {
          "variantId": 13,
          "variantName": "relative",
          "style": "#element > * {\n  padding: 10px;\n  background: white;\n  width: 60px;\n}",
          "code": "<div style=\"transform: translate(500px, 0px);\">move</div>",
          "elState": "// this = first element in given html\n// this = first element in given html\nSifrr.animate.animate({\n  target: this.style, \n  to: {\n    transform: 'translate(+=100px, 0px)'\n  },\n  time: 300,\n  type: 'easeOut'\n});"
        },
        {
          "variantId": 7,
          "variantName": "delay",
          "style": "#element > * {\n  padding: 10px;\n  background: white;\n  width: 70px;\n}",
          "code": "<div style=\"transform: translate(50px, 0px);\">move</div>\n<p></p>",
          "elState": "// this = first element in given html\n// this = first element in given html\nthis.nextElementSibling.textContent ='waiting';\nSifrr.animate.animate({\n  target: this.style, \n  to: {\n    transform: 'translate(100px, 0px)'\n  },\n  time: 1000,\n  type: 'easeOut',\n  delay: 1000,\n  onUpdate: () =>  this.nextElementSibling.textContent ='moving'\n}).then(() => {\n  this.nextElementSibling.textContent ='moved';\n}).catch(console.log);"
        },
        {
          "variantId": 4,
          "variantName": "multiple to same value",
          "style": "#element > * {\n  padding: 10px;\n  background: white;\n  width: 60px;\n}",
          "code": "<div style=\"transform: translate(0px, 0px); width: 100px;\">move</div>\n<p style=\"transform: translate(50px, 0px); width: 100px;\"></p>",
          "elState": "// this = first element in given html\nconst elements = Array.from(this.parentNode.children);\n\nSifrr.animate.animate({\n  targets: elements,\n  to: {\n    style: {\n      transform: 'translate(100px, 50px)',\n      width: '300px'\n    }\n  }\n});\n"
        },
        {
          "variantId": 5,
          "variantName": "custom types",
          "style": "#element > * {\n  padding: 10px;\n  background: white;\n  width: 60px;\n}",
          "code": "<div>0</div>\n<div>0</div>",
          "elState": "// this = first element in given html\n\n// bezier array\nSifrr.animate.animate({\n  target: this,\n  to: {\n    style: {\n      transform: 'translateX(100px)'\n    },\n    textContent: 100\n  },\n  type: [0,1.4,.96,1.17],\n  time: 1000,\n  round: true\n});\n\n// function\nSifrr.animate.animate({\n  target: this.nextElementSibling,\n  to: {\n    style: {\n      transform: 'translateX(100px)'\n    },\n    textContent: 100\n  },\n  type: i => 1.5 * i,\n  time: 1000,\n  round: true\n});\n"
        },
        {
          "variantId": 6,
          "variantName": "staggering",
          "style": "#element > #parent * {\n  padding: 10px;\n  background: white;\n  width: 60px;\n}",
          "code": "<div id=\"parent\">\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n</div>",
          "elState": "const children = this.children;\n\nSifrr.animate.animate({\n  targets: children,\n  to: {\n    style: {\n      transform: 'translateX(100px)'\n    },\n    textContent: 100\n  },\n  type: [0,1.4,.96,1.17],\n  time: 500,\n  round: true,\n  delay: i => i * 200\n});"
        },
        {
          "variantId": 8,
          "variantName": "wave",
          "style": "#element > #parent * {\n  padding: 10px;\n  background: white;\n  width: 30px;\n  font-size: 10px;\n  display: inline-block;\n  margin: 30px;\n}",
          "code": "<div id=\"parent\">\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n<br>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n<br>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n<br>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n<br>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n</div>",
          "elState": "const children = this.$$('div');\n\nSifrr.animate.animate({\n  targets: children,\n  to: {\n    style: {\n      transform: ['scale3d(1,1,1)', 'scale3d(2,2,2)']\n    }\n  },\n  type: 'ease',\n  time: 300,\n  delay: i => {\n    return (i % 5) * 200\n  }\n});"
        },
        {
          "variantId": 9,
          "variantName": "ripple",
          "style": "#element > #parent * {\n  padding: 10px;\n  background: white;\n  width: 30px;\n  font-size: 10px;\n  display: inline-block;\n  margin: 20px;\n}",
          "code": "<div id=\"parent\">\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n<br>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n<br>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n<br>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n<br>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n<br>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n<br>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n</div>",
          "elState": "const children = this.$$('div');\n\nfunction ripple(maxWidth, x, y, timeDiff) {\n  return i => {\n    const x_c = Math.abs((i % maxWidth) - x);\n    const y_c = Math.abs(Math.floor(i / maxWidth) - y);\n    const max_c = Math.max(x_c, y_c);\n    return max_c * timeDiff\n  }\n}\n\nSifrr.animate.animate({\n  targets: children,\n  to: {\n    style: {\n      transform: ['scale3d(1,1,1)', 'scale3d(2,2,2)']\n    }\n  },\n  type: 'ease',\n  time: 300,\n  delay: ripple(9, 2, 3, 150)\n});"
        },
        {
          "variantId": 10,
          "variantName": "function values",
          "style": "#element > #parent * {\n  padding: 10px;\n  background: white;\n  width: 30px;\n  height: 30px;\n  font-size: 10px;\n  display: inline-block;\n  margin: 30px;\n}",
          "code": "<div id=\"parent\">\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n</div>",
          "elState": "const children = this.$$('div');\n\nSifrr.animate.animate({\n  targets: children,\n  to: (i) => {\n    return {\n      style: {\n        height: ['30px', (40 + i * 10) + 'px']\n      }\n    }\n  },\n  type: 'ease',\n  time: i => (i + 1) * 100,\n  delay: i => i * 100\n});"
        },
        {
          "variantId": 11,
          "variantName": "color",
          "style": "#element > #parent {\n  padding: 10px;\n  background: rgb(10,100,245);\n  width: 30px;\n  height: 30px;\n}",
          "code": "<div id=\"parent\">\n</div>",
          "elState": "Sifrr.animate.animate({\n  target: this,\n  to: {\n    style: {\n      background: ['rgb(10,100,245)', 'rgb(67,205,155)']\n    }\n  },\n  type: 'ease',\n  time: 4000\n});"
        },
        {
          "variantId": 12,
          "variantName": "attribute",
          "style": "#element > #parent {\n  padding: 10px;\n  background: rgb(10,100,245);\n  width: 30px;\n  height: 30px;\n  border-radius: 1px;\n}",
          "code": "<div id=\"parent\" style=\"border-radius: 1px\">\n</div>",
          "elState": "Sifrr.animate.animate({\n  target: this,\n  to: {\n    styleattribute: ['border-radius: 1px', 'border-radius: 15px']\n  },\n  type: 'ease',\n  time: 3000,\n  onUpdate: (e, n, v) => e.setAttribute(n.slice(0, 5), v)\n});"
        }
      ],
      "element": "sifrr-shimmer",
      "code": "<div style=\"transform: translate(500px, 0px);\">move</div>",
      "variantId": 13,
      "variantName": "relative",
      "style": "#element > * {\n  padding: 10px;\n  background: white;\n  width: 60px;\n}",
      "elState": "// this = first element in given html\n// this = first element in given html\nSifrr.animate.animate({\n  target: this.style, \n  to: {\n    transform: 'translate(+=100px, 0px)'\n  },\n  time: 300,\n  type: 'easeOut'\n});",
      "current": 0
    },
    {
      "name": "advanced",
      "variants": [
        {
          "variantId": 1,
          "variantName": "handwritten text",
          "style": "#element h3 {\n  width: 500px;\n}",
          "code": "<h3>\n  <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 229.2 69.6\" style=\"enable-background:new 0 0 229.2 69.6;\" xml:space=\"preserve\">\n\t\t\t\t\t\t\t\t\t\t\t<defs>\n\t\t\t\t\t\t\t\t\t\t\t\t<clipPath id=\"websiteClip\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<path d=\"M79.7,29.1C74.3,36,67.5,43.8,59.3,52.5c-7.1,7-11.8,11.2-13.8,12.6c-4.6,3.5-7.9,5.3-9.8,5.3h-0.4c-2.9,0-4.8-1-5.6-3\n\t\t\t\t\t\t\t\t\t\t\t\t\tc-0.1-0.5-0.2-0.8-0.2-1v-0.6c0-2.2,1.8-6.5,5.5-12.8l7.8-14.3C31.4,49.5,23.8,57,19.8,60.8c-1.8,0-3.4-0.6-4.8-1.8\n\t\t\t\t\t\t\t\t\t\t\t\t\tc-0.6-0.7-0.9-1.7-0.9-2.9c0-2.3,1.8-6.5,5.4-12.6c8-14.7,13.4-24.7,16.3-30.1h-0.2c-5.9,0.7-13,4.1-21.1,10c-1.4,0.9-3.4,2.7-6,5.5\n\t\t\t\t\t\t\t\t\t\t\t\t\tV29c0.5,1.3,1.3,2.2,2.5,2.9c1.5,0.5,3,0.7,4.5,0.7c0.2,0,0.6,0,0.9,0.1c0,0.9-1.6,1.9-4.8,3.1c-1.7,0.5-3.1,0.7-4.2,0.7H6.9\n\t\t\t\t\t\t\t\t\t\t\t\t\tc-2.5,0-4.2-2.8-4.9-8.4c-0.1-0.3-0.1-0.8-0.1-1.6v-1.1c0-2.5,0.9-4.5,2.8-5.9c1.8-1.7,4.1-3.4,7-5.1c4-2.3,9.3-4.5,15.8-6.6\n\t\t\t\t\t\t\t\t\t\t\t\t\tc4.8-1.2,8.6-1.8,11.5-1.8c1.5,0.2,2.9,0.8,4,1.8c1.7,1.6,2.6,3.6,2.6,5.9c0,0.3-2.3,4.5-6.9,12.6c-0.8,1.5-4.3,8-10.6,19.4v0.1\n\t\t\t\t\t\t\t\t\t\t\t\t\tc7.8-7.3,15.2-14.3,22.1-20.9C56,14,59.2,7.7,59.5,6.1c1.4,0.2,2.7,0.7,4,1.7c1.8,1.5,2.7,3.6,2.7,6.2v0.1\n\t\t\t\t\t\t\t\t\t\t\t\t\tC49.7,44,41.2,59.4,40.8,60.4c1.8-1.6,4.3-4.2,7.7-7.8c9.4-10.6,18.4-22,27.2-34C82,9.8,85.6,3.9,86.4,1c0.1-0.4,0.1-0.8,0.1-1.1\n\t\t\t\t\t\t\t\t\t\t\t\t\tv-0.1c0.1-0.1,0.1-0.1,0.2-0.1c1.5,0.4,3.1,1.4,4.9,3c1.8,2.3,2.8,4.1,2.8,5.3C91.5,13.2,86.6,20.2,79.7,29.1z M125.8,40\n\t\t\t\t\t\t\t\t\t\t\t\t\tc-0.7,1.3-1.2,2.3-1.6,3c-0.6,1-1.2,2.3-2,3.8l-2.1,3.7c-1.8,3.2-3.2,5.7-4.1,7.6c-1.5,2.8-4.1,3.4-7.7,2c-1.5-0.6-2.8-1.4-4-2.5\n\t\t\t\t\t\t\t\t\t\t\t\t\tc-1.2-1.2-2.1-2.3-2.5-3.4l-3.6,6.6c-4.5-0.4-6.3-2.4-5.6-6c-1.1,0.8-2.1,1.5-3,2.1C86,59,83,60.3,80.9,60.6\n\t\t\t\t\t\t\t\t\t\t\t\t\tc-0.7,0.1-1.3,0.2-1.8,0.2h-0.4c-1.8,0-3.4-0.7-4.7-2c-1.4-1.8-2.1-4.1-2.1-6.6v-0.6c0-3.1,1.1-7,3.2-11.5\n\t\t\t\t\t\t\t\t\t\t\t\t\tc3.5-7.4,8.1-12.8,13.8-16.2c1-0.6,2-1,3-1.5c0.9-0.4,1.4-0.6,1.6-0.6c0.7,0,1.9,0.2,3.4,0.6c0.7,0.2,1.5,0.4,2.2,0.7\n\t\t\t\t\t\t\t\t\t\t\t\t\tc2.5,1.2,3.8,3,3.8,5.4v0.4c0,1.6-0.6,3.5-1.9,5.7c-2.3,3.7-5.4,6.8-9.5,9.4l-8.3,0.2c-0.7,0.9-1.2,1.7-1.6,2.4\n\t\t\t\t\t\t\t\t\t\t\t\t\tc-1.5,2.7-2.3,5-2.6,6.9c0.1,0.3,0.4,0.5,0.9,0.5H80c1.4,0,3.9-0.9,7.6-2.6c2.6-1.2,5.4-2.9,8.3-5.1c0.4-0.3,0.8-0.6,1.2-0.9\n\t\t\t\t\t\t\t\t\t\t\t\t\tc0.6-1.2,1.1-2,1.4-2.6c0.7-1.4,2.2-4.1,4.5-8.3l0.7-1.4l0.8-1.4l1.6-2.9c1.2-2.3,2.3-4.2,3.2-5.9c5.4-9.8,8-15.1,7.9-15.9\n\t\t\t\t\t\t\t\t\t\t\t\t\tc2,0.2,3.6,1,4.8,2.6c1.3,1.5,1.8,3.2,1.7,5.2l-11.9,21.5c0.9-0.8,2-1.8,3.3-3l1.7-1.5l1.7-1.6c2.6-2.4,4.6-4.2,6-5.4\n\t\t\t\t\t\t\t\t\t\t\t\t\tc4.6,0.4,6.4,2.6,5.4,6.6c-0.4,1.5-1.2,3.4-2.4,5.7l-0.8,1.5L125.8,40z M85.4,38.8l4,0.2c0.9-0.3,1.7-0.7,2.4-1.2\n\t\t\t\t\t\t\t\t\t\t\t\t\tc0.3-0.2,0.8-0.6,1.5-1.3c0.7-0.8,1.2-1.6,1.6-2.4c0.7-1.5,1.1-2.8,1.1-3.9c0-0.7-0.2-1.1-0.6-1.3h-0.2c-0.8,0.1-1.8,0.7-3.1,1.8\n\t\t\t\t\t\t\t\t\t\t\t\t\tc-1.3,1.2-2.2,2.1-2.9,2.8C87.7,35.4,86.4,37.1,85.4,38.8z M119.9,35.9l-13.6,11.5c-0.3,0.2-0.6,0.4-0.9,0.6l-0.4,0.6\n\t\t\t\t\t\t\t\t\t\t\t\t\tc0.2,1.7,0.7,3,1.5,4c0.9,1,1.8,1.4,3,1.1L119.9,35.9z M227.8,43.1v0.6c0,1.2-0.4,2.2-1.1,3h-0.1c-0.2-0.7-0.6-1.3-1.2-1.8\n\t\t\t\t\t\t\t\t\t\t\t\t\tc-0.7-0.3-1.3-0.5-1.8-0.5H223c-3.2,0-9.8,2.8-19.8,8.5c-9,5.2-14.8,7.8-17.3,7.8h-0.3c-3.4,0-5.6-1.9-6.7-5.6\n\t\t\t\t\t\t\t\t\t\t\t\t\tc-0.2-1.1-0.4-2.2-0.4-3.1v-0.5c0-1.4,0.2-3,0.6-4.6c-4.3,3.9-9,8.2-14.3,13c-0.6,0.6-0.9,0.8-0.9,0.8c-1.7,0-3.1-0.5-4.4-1.5\n\t\t\t\t\t\t\t\t\t\t\t\t\tc-0.7-0.8-1.1-1.7-1.1-2.6v-0.6c0-1.7,1.3-5,4-9.8c-4.1,3.8-8.2,7.5-12.4,11.2c-2.3,2.2-3.6,3.3-3.7,3.3c-1.3,0-2.6-0.4-4-1.1\n\t\t\t\t\t\t\t\t\t\t\t\t\tc-1.2-0.8-1.8-1.9-1.8-3.2v-0.4c0-2.2,1.5-5.8,4.4-10.9c0.7-1.2,1.4-2.5,2.2-3.9c-2.6,1.1-4.9,2.2-7,3.3c0.3,1.7,0.5,3.2,0.5,4.7\n\t\t\t\t\t\t\t\t\t\t\t\t\tv0.3c0,3.4-0.9,6.4-2.7,8.9c-1.5,1.6-3.2,2.4-5.3,2.4h-0.4c-1.9,0-3.7-0.7-5.3-2.2c-0.8-0.9-1.4-1.8-1.7-2.6\n\t\t\t\t\t\t\t\t\t\t\t\t\tc-0.3-0.9-0.5-1.8-0.5-2.5v-0.4c0-0.9,0.2-1.9,0.6-3c0-0.1,0.1-0.2,0.3-0.4c2.5-2,5-3.8,7.5-5.4c-2-3.7-3-6-3-6.9c0-0.2,0-0.6,0-1.1\n\t\t\t\t\t\t\t\t\t\t\t\t\tc0-3,1.6-6.3,4.8-9.8c1.6-1.6,2.8-2.7,3.7-3.2c1.7-1.3,3.6-2.5,5.6-3.5c1.1-0.6,2.1-1.1,2.9-1.4c1.7,0.6,3.3,1.9,4.6,4\n\t\t\t\t\t\t\t\t\t\t\t\t\tc0.4,0.6,0.7,1.3,1,2.1l0.2,0.4c-2.8,0.9-5,1.8-6.8,2.9c-4.9,2.8-7.4,6.2-7.4,10.2c0,0.9,0.1,1.8,0.4,2.8c4.9-2.9,8.8-4.9,11.6-6\n\t\t\t\t\t\t\t\t\t\t\t\t\tc0.8-1.5,1.7-3,2.7-4.7c1.6-3,2.4-4.9,2.5-5.9h0.1c1.2,0.1,2.5,0.6,3.7,1.5c1,0.9,1.6,1.6,1.8,2c0.7,1.3,1.1,2.5,1.1,3.7l-0.1,0.3\n\t\t\t\t\t\t\t\t\t\t\t\t\tv0.4c-0.2,0.4-1.6,2.9-4.2,7.5l-5.2,9.1l12.1-11.1c0.7-0.4,1.4-0.6,1.8-0.6h0.4l9-16.4h-0.1c-2.4,0-4.5,0.1-6.4,0.2\n\t\t\t\t\t\t\t\t\t\t\t\t\tc-0.4-0.2-0.7-0.5-0.9-0.9c-1,1.1-2.2,2.2-3.4,3.5c-2.1-0.3-3.9-0.7-5.4-1.2c-0.5-0.2-1-0.4-1.6-0.6v-0.1c2.3-5.4,3.6-8.5,4-9.3\n\t\t\t\t\t\t\t\t\t\t\t\t\tc1.5-0.2,2.9-0.3,4.2-0.3h1.2c2.7,0,5.3,0.3,7.8,0.8v0.1c-0.4,0.4-2.1,2.1-4.9,5.1l7.3-0.8c3-5.5,4.5-8.6,4.5-9.3\n\t\t\t\t\t\t\t\t\t\t\t\t\tc1.2,0,2.5,0.6,4.1,1.8c1.5,1.5,2.3,3.3,2.3,5.4c0,0.4-0.2,1-0.6,1.6c1.2-0.1,2-0.1,2.6-0.1h2.8c0.1,0,0.1,0.1,0.1,0.2\n\t\t\t\t\t\t\t\t\t\t\t\t\tc-1.2,2.8-1.9,4.3-1.9,4.3h-0.1c-1.7-0.1-3.5-0.2-5.6-0.4l-16,28.7h0.1c7.9-7.4,12-11.1,12.1-11.2c0,0,0,0,0.1,0\n\t\t\t\t\t\t\t\t\t\t\t\t\tc0.7-1.4,1.6-2.9,2.5-4.4c1.1-1.6,2.6-3.4,4.5-5.4c2.2-2.2,4-3.6,5.4-4.3c1.4-0.9,3-1.8,4.9-2.5c0.2-0.1,0.3-0.1,0.4-0.1\n\t\t\t\t\t\t\t\t\t\t\t\t\tc1.8,0,3.8,0.5,5.9,1.4c2.5,1.2,3.7,3,3.7,5.5c0,3.2-2,6.9-6,11.2c-2.3,2.2-4.2,3.6-5.5,4.3c-0.4,0.1-0.7,0.1-0.7,0.1\n\t\t\t\t\t\t\t\t\t\t\t\t\tc-1.2,0-3.8,0-7.8,0.1c-2.1,2.8-3.5,6-4.2,9.4c0,0.3,0.6,0.6,1.7,0.7c0,0.1,0.2,0.1,0.7,0.1h0.5c0.1,0,0.1,0,0.2,0\n\t\t\t\t\t\t\t\t\t\t\t\t\tc3.1,0,7.8-2.7,13.8-8.1c5.1-4.6,8.7-7.5,10.9-8.8c2-1.1,3.7-1.7,5.1-1.7c4.1,0,7,1.7,8.6,5C227.7,41.5,227.8,42.4,227.8,43.1z\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tM192.3,38.5c0.4,0,1.7,0,4.1,0.1c1.1-0.2,2.2-0.9,3.4-2c2.1-2.3,3.1-4.6,3.1-6.9c-0.1-0.8-0.3-1.2-0.7-1.2\n\t\t\t\t\t\t\t\t\t\t\t\t\tC199.4,29.3,196.1,32.7,192.3,38.5z M134.8,47.9c-0.7,0.5-1.6,1.3-2.7,2.3c-0.6,0.6-1,1.2-1.4,1.8c1.5-0.4,2.6-1,3.4-1.8\n\t\t\t\t\t\t\t\t\t\t\t\t\tc0.4-0.5,0.6-1,0.6-1.7V47.9z\"/>\n\t\t\t\t\t\t\t\t\t\t\t\t</clipPath>\n\t\t\t\t\t\t\t\t\t\t\t</defs>\n\t\t\t\t\t\t\t\t\t\t\t<path clip-path=\"url(#websiteClip)\" d=\"M18.5,33.91S0,36.67,6.67,24.17c8-8.34,22.15-15.46,31.31-13.62,8.34,1-.95,9.34-8.81,24.5C23.34,46.29,15.08,55.23,18.5,57c1.67.86,12-8.3,21.33-20C49.55,24.8,58.23,9.57,61.17,9.5,67.83,9.33,49.88,35.43,40.83,52c-4.14,7.59-10.66,14.17-6.66,15.5C38,68.77,49.17,64,83,15.67c1.59-2.27,7-10.49,8.6-13\" fill=\"none\" stroke=\"#FFFFFF\" stroke-width=\"15\"/>\n\t\t\t\t\t\t\t\t\t\t\t<path clip-path=\"url(#websiteClip)\" d=\"M85.4,41.5s18.1-5.6,13.35-15.75c-2.89-6.18-9,.9-15.5,8.2,0,0-25.5,39.2,14.25,16,0,0,24.37-22.26,28.5-21.05,1.62,1.09-4.14,11-8,19-2.71,5.63-3,10.83-5.55,9.39-24,.28,15.13-45.9,9.21-48.09S94.4,63,94.4,63\" fill=\"none\" stroke=\"#FFFFFF\" stroke-width=\"9\"/>\n\t\t\t\t\t\t\t\t\t\t\t<path clip-path=\"url(#websiteClip)\" d=\"M150.24,20.5S138,26.75,136,31.75s-4.07,5,.43,13.1a9.25,9.25,0,0,1-.18,7.15c-1.75,3.5-2,9.75-7.75,5.75S134.24,42,150.24,37.5c0,0,4.41-4.3,8.51-8.6s-17.5,26-15.88,31.9L173.5,35.19,186.15,9.13s-28,50.42-25.1,51S178.75,38,195.5,41c0,0,20.9-14.33,5-15.75,0,0-26.5,15.25-17,31.25,0,0,8.5,3,18-4.5s22.5-21.2,24.75-4.1\" fill=\"none\" stroke=\"#FFFFFF\" stroke-width=\"10\"/>\n\t\t\t\t\t\t\t\t\t\t\t<path clip-path=\"url(#websiteClip)\" d=\"M171,9.13s-11.33,10.38-8,11.92,43-2.8,43-2.8\" fill=\"none\" stroke=\"#FFFFFF\" stroke-width=\"13\"/>\n\t\t\t\t\t\t\t\t\t\t</svg>\n</h3>",
          "elState": "const svgPath = this.$$('svg > path'), l = svgPath.length;\n\nfor (let i = 0; i < l; i++) {\n  const pathLen = Math.round(svgPath[i].getTotalLength());\n  svgPath[i].setAttribute('stroke-dasharray', pathLen);\n  svgPath[i].style.strokeDashoffset = pathLen + 'px';\n}\n\nfunction animateOptions(front = true) {\n  return {\n    targets: svgPath,\n    to: function(i) {\n      let fromTo = [this.getAttribute('stroke-dasharray') + 'px', '0px'];\n      if (!front) fromTo.reverse();\n      return {\n        style: {\n          'stroke-dashoffset': fromTo\n        }\n      }\n    },\n    time: 700,\n    delay: i => front ? i * 500 : (l - i - 1) * 500\n  }\n}\n\nSifrr.animate.loop(() => Sifrr.animate.keyframes([animateOptions(), animateOptions(false)]));\n\nreturn {};\n"
        },
        {
          "variantId": 2,
          "variantName": "svg lines",
          "style": "#element {\n  background: black;\n}",
          "code": "<div class=\"anim\">\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1100 800\"><g fill=\"none\" fill-rule=\"evenodd\" stroke-width=\"2\"><path stroke=\"#31B495\" d=\"M781.02 488.77v69.78c0 1.08-.88 1.96-1.97 1.96l-135.12-.04c-1.09 0-2.6.62-3.38 1.39l-39.23 38.96a5.52 5.52 0 0 1-3.37 1.4h-75.38a1.97 1.97 0 0 1-1.97-1.97v-33.5\"/><path stroke=\"#F4D21F\" d=\"M674.88 355.57l45.54-45.24a5.42 5.42 0 0 0 1.39-3.35l-.06-10.38c0-1.08-.63-2.58-1.4-3.35l-43.38-43.07a1.94 1.94 0 0 1 0-2.77l82.83-82.25a5.52 5.52 0 0 1 3.37-1.4l44.94.1c1.08 0 2.6-.62 3.37-1.37L952.5 22.65\"/><path stroke=\"#1AACA8\" d=\"M507-76.68v265.47a4 4 0 0 0 4 3.99H566c1.08 0 1.97.88 1.97 1.96v147.5c0 1.08-.63 2.59-1.4 3.35l-47.9 47.4a5.45 5.45 0 0 0-1.4 3.34c0 2.25.64 3.76 1.4 4.53l53.82 53.26c.77.76 1.76 1.39 2.19 1.39.43 0 .79.88.79 1.96v70.17c0 1.07-.89 1.96-1.97 1.96l-85.81-.04c-1.09 0-2.6.62-3.38 1.39l-1.55 1.54a5.52 5.52 0 0 1-3.38 1.4h-9.29\"/><path stroke=\"#1F8C43\" d=\"M8 127.82v391.06a4.04 4.04 0 0 0 4 4.04L140.8 524\"/><path stroke=\"#1AA5D0\" d=\"M894.01 374l49.8-49.44a5.52 5.52 0 0 1 3.37-1.4h92.41c1.09 0 2.6.63 3.38 1.4l27.18 26.99\"/><path stroke=\"#1AA5D0\" d=\"M894.01 374l49.8-49.44a5.52 5.52 0 0 1 3.37-1.4h92.41c1.09 0 2.6.63 3.38 1.4l27.18 26.99\"/><path stroke=\"#1F8C43\" d=\"M755.16 213.9l70.82.04c1.08 0 2.6-.63 3.37-1.4l91.61-90.97a5.52 5.52 0 0 1 3.37-1.39h77.07l-71.29-72.13a5.45 5.45 0 0 1-1.4-3.35V16.87\"/><path stroke=\"#9DCA40\" d=\"M261.78-52.44l11.16 11.08c.77.77 1.4 2.28 1.4 3.35V-5L156.7 111.03l-85.4 84.8a5.45 5.45 0 0 0-1.4 3.35v100.67c0 1.08.89 1.96 1.97 1.96h50.4c1.09 0 1.98.88 1.98 1.96l.07 26.92c0 1.07.9 1.96 1.98 1.96l335.73.13c1.09 0 1.98.88 1.98 1.96v36.79l-42.99 43.78a5.52 5.52 0 0 1-3.37 1.4H385.2\"/><path stroke=\"#DA5A98\" d=\"M564.8 549.64v17.76c0 1.08-.64 2.59-1.4 3.35L382.28 750.6a5.52 5.52 0 0 1-3.38 1.39h-109.1c-1.09 0-1.97.88-1.97 1.96v23.37c0 1.07-.9 1.96-1.98 1.96h-83.54c-1.08 0-1.97.88-1.97 1.96v45.8c0 1.07.89 1.95 1.97 1.95h29.89c1.08 0 1.97.88 1.97 1.96v51.07c0 1.08.63 2.59 1.4 3.35l10.32 10.25c.77.76 2.29 1.39 3.37 1.39h111.77c1.09 0 1.34.62.57 1.39M482.82 656H630.9\"/><path stroke=\"#E5683E\" d=\"M440.53 245.87l-31.7 31.48a5.52 5.52 0 0 1-3.37 1.39h-62.37c-1.09 0-2.6.62-3.38 1.39l-2.68 3.66-264.59.02c-1.08 0-2.6-.63-3.37-1.4l-47.3-46.97a5.52 5.52 0 0 0-3.37-1.39h-57.47l-1.12-34.61c0-1.08-.63-2.59-1.4-3.35l-66.54-65.94\"/><path stroke=\"#9F83B6\" d=\"M705.31 221.73h7.83c1.09 0 2.6.63 3.37 1.4l45.8 45.6c.78.76 1.4 2.27 1.4 3.35v13.94c0 1.08.46 1.96 1.03 1.98.56 0 1.03.9 1.03 1.98v10.77l-.15 110.84c0 1.08-.89 1.96-1.98 1.96H628.32c-1.08 0-2.6-.63-3.37-1.4l-12.2-12.12a5.52 5.52 0 0 0-3.38-1.39h-46.18a2 2 0 0 0-2 1.96l-.17 26.74c0 1.08-.63 2.59-1.4 3.35l-8.82 8.76a5.52 5.52 0 0 1-3.37 1.39l-26.65-.06c-1.09 0-2.6.62-3.38 1.39l-48.1 47.78a5.52 5.52 0 0 1-3.38 1.39h-16.37l-79.45-.02c-1.09 0-2.6.63-3.36 1.39L220.71 639.06a5.47 5.47 0 0 1-3.35 1.4H31.06\"/><path stroke=\"#BC6D21\" d=\"M145.43 99.41L289.6 243.5c.77.76 2.29 1.39 3.37 1.39h146.76c1.09 0 2.6.62 3.38 1.39l31.93 31.71c.77.77 1.4 2.27 1.4 3.35V474.1c0 1.08-.63 2.59-1.4 3.35l-7.6 7.54a5.52 5.52 0 0 1-3.36 1.4h-20.62l-20.67 20.97-2.78 2.78L289.37 640a5.45 5.45 0 0 0-1.4 3.35l.16 177.85\"/><path stroke=\"#DA1817\" d=\"M318.82 380.62h94.88c1.09 0 2.6.63 3.38 1.39l14.97 14.87c.77.76 2.29 1.39 3.37 1.39h72.99c1.08 0 2.6.63 3.35 1.39l58.57 58.53c.77.77 2.27 1.4 3.35 1.4h103.37c1.08 0 1.97-.89 1.97-1.97v-14.7c0-1.09-.89-1.97-1.97-1.97l-6.7.02H630.1a1.97 1.97 0 0 1-1.97-1.96v-57c0-1.08-.63-2.59-1.4-3.35l-14.58-14.48a5.45 5.45 0 0 1-1.4-3.35v-17.3c0-1.07-.63-2.58-1.4-3.34L597 327.92a5.52 5.52 0 0 0-3.37-1.39h-17.4c-1.09 0-2.6-.62-3.38-1.39l-41.8-41.5a5.52 5.52 0 0 0-3.37-1.4h-41.34\"/><path stroke=\"#9F9FA0\"/><path stroke=\"#74BB63\" d=\"M855.2 194.4h59.84c1.09 0 1.97.89 1.97 1.96v28.74c0 1.08.64 2.59 1.4 3.35l50.96 50.6c.77.76 1.4 2.27 1.4 3.35v101.47l105.2 104.27\"/><path stroke=\"#DA5A98\" d=\"M638.46 305.73L651 293.29c.77-.74.77-2 0-2.76l-31.35-31.13c-.76-.74-.76-2 0-2.76l18.53-18.4a5.52 5.52 0 0 1 3.37-1.39l160.41-.2 423.37 1.2c1.08 0 1.97.89 1.97 1.96v71.5\"/><path stroke=\"#BC6D21\" d=\"M438.61 486.03h-18.54c-1.08 0-2.6-.63-3.37-1.4l-74.94-74.41a5.52 5.52 0 0 0-3.37-1.4h-38.57c-1.08 0-2.6-.62-3.37-1.38l-47-46.68-36.58-.04-57 71.59a5.45 5.45 0 0 0-1.4 3.35v23.9\"/><path stroke=\"#74BB63\" d=\"M882.06 358.97l-46.92 46.6a5.52 5.52 0 0 1-3.38 1.39h-94.64c-1.09 0-2.6-.63-3.38-1.4l-30.6-30.33a5.52 5.52 0 0 0-3.36-1.4l-34.94.04c-1.08 0-2.6.63-3.37 1.4l-29.57 29.36a5.52 5.52 0 0 1-3.37 1.39l-14.55-14.35a5.63 5.63 0 0 0-3.42-1.4l-156.97-.25c-1.11 0-2.65.63-3.43 1.4l-27.85 27.61a5.52 5.52 0 0 1-3.38 1.4H-23.82l-88.65.2-12.44 12.35\"/><path stroke=\"#2283BC\" d=\"M292.9 643.74l59.56-59.12a5.52 5.52 0 0 1 3.37-1.39h23.93c1.08 0 2.6-.63 3.37-1.39l46.53-46.21a5.52 5.52 0 0 1 3.38-1.4h33.53l153.67-.01c1.08 0 1.97-.88 1.97-1.96V420.01c0-1.07-.63-2.58-1.4-3.35l-38.64-38.37a5.45 5.45 0 0 1-1.4-3.35v-51.52c0-1.08-.64-2.59-1.4-3.35L468.91 210.39a5.52 5.52 0 0 0-3.38-1.4l-180.49.2\"/><path stroke=\"#DA5A98\" d=\"M484.13 548.71h-37.09c-1.08 0-2.6.63-3.37 1.4l-69.02 68.54c-.77.76-.77 2 0 2.76l28.09 27.78c.77.76 2.29 1.39 3.37 1.39h62.41\"/><path stroke=\"#31B495\" d=\"M520.82 561.7v-4.74c0-1.08-.89-1.96-1.98-1.96h-13.21c-1.09 0-2.6-.62-3.37-1.39l-43.36-42.88a5.45 5.45 0 0 1-1.4-3.35v-190.4c0-1.08.63-2.6 1.4-3.36l20.89-20.74a5.45 5.45 0 0 0 1.4-3.35v-95.4c0-1.08-.63-2.58-1.4-3.35L292.4 4.7l-.6-40.88c0-1.08-.62-2.58-1.4-3.35L278.8-51.07\"/><path stroke=\"#1EB2D8\" d=\"M275.76 745h99.28c1.09 0 2.6-.63 3.38-1.4l174.33-172.75a5.52 5.52 0 0 1 3.38-1.4h46.75c1.08 0 2.6-.62 3.35-1.38l51.47-51.46a5.42 5.42 0 0 0 1.38-3.35V311.29c0-1.07-.63-2.58-1.4-3.35l-51.84-51.3a5.52 5.52 0 0 0-3.38-1.4h-17.95a1.97 1.97 0 0 1-1.97-1.95v-44.47c0-1.07-.89-1.96-1.97-1.96h-88.63a1.97 1.97 0 0 1-1.97-1.96v-19.2c0-1.07-.64-2.58-1.4-3.34L309.87 4.92\"/><path stroke=\"#F4D21F\" d=\"M1002.65 123.83H926.5c-1.08 0-2.6.62-3.37 1.39l-92.28 91.46a5.52 5.52 0 0 1-3.37 1.39l-131.87-.08c-1.09 0-2.6.63-3.37 1.37l-51.9 51.19c-.77.76-.77 2 0 2.76l21.22 21.1c.77.76 1.4 2.27 1.4 3.35v15.69\"/><path stroke=\"#BE2F39\" d=\"M672.51 437.64h54.25c1.08 0 2.6.63 3.37 1.4l49.04 48.7c.77.76 2.29 1.38 3.37 1.38h45.16c1.08 0 2.6-.62 3.37-1.39L914.39 405a5.52 5.52 0 0 1 3.37-1.4h42.22c1.08 0 2.6.63 3.37 1.4l100.8 100.1\"/><path stroke=\"#E5683E\" d=\"M672.51 434.31h55.63c1.08 0 2.6.63 3.37 1.4l49.14 48.8c.77.76 2.29 1.38 3.37 1.38l41.9-.04c1.08 0 2.6-.62 3.37-1.39l62.08-61.68a5.45 5.45 0 0 0 1.4-3.35l-.1-268.18c0-1.08-.63-2.59-1.4-3.35l-99.8-99.28a5.52 5.52 0 0 0-3.37-1.39H422.62c-1.08 0-2.6.63-3.37 1.4L260.28 206.3a5.52 5.52 0 0 1-3.38 1.39H127.3c-1.08 0-2.6.62-3.37 1.39l-36.71 36.45a5.45 5.45 0 0 0-1.4 3.35v185.1\"/><path stroke=\"#1EB2D8\" d=\"M410.1 713.73l17.53 17.42c.77.76 2.29 1.39 3.37 1.39h42.02c1.09 0 2.6-.63 3.37-1.4l26.02-25.83 123.2-.31\"/><path/><path stroke=\"#2283BC\" d=\"M307.34 907.08c.77-.77.52-1.4-.57-1.4H108.29a1.97 1.97 0 0 1-1.98-1.95V743.59c0-1.08.9-1.96 1.98-1.96h264.38c1.09 0 2.6-.63 3.38-1.4l23.75-23.58c.77-.76.77-2 0-2.76l-80.84-80.1c-.77-.76-.51-1.4.57-1.4h137.53c1.09 0 2.6-.62 3.38-1.38l53.63-53.26a5.52 5.52 0 0 1 3.37-1.4l88.57-.2c1.09 0 2.6-.62 3.38-1.38l55.6-55.22a5.45 5.45 0 0 0 1.4-3.35V409.93c0-1.08.9-1.96 1.98-1.96h29c1.08 0 2.6-.63 3.37-1.4l43.32-43.01a5.52 5.52 0 0 1 3.37-1.4h6.11c1.09 0 2.6-.62 3.38-1.38l53.12-52.76a5.52 5.52 0 0 1 3.37-1.39h13.6c1.08 0 2.6.63 3.37 1.4L892.79 370c.77.77 2.29 1.4 3.37 1.4h74.06c1.08 0 2.6.62 3.37 1.38l93.97 93.5\"/><path stroke=\"#E6632A\" d=\"M647.56 429.46v-33.62c0-1.08-.63-2.59-1.4-3.35l-31.45-31.22a5.52 5.52 0 0 0-3.37-1.4h-36.87c-1.08 0-2.6.63-3.37 1.4l-74.35 73.83a5.52 5.52 0 0 1-3.37 1.39H440.9a1.97 1.97 0 0 1-1.98-1.96v-71.5c0-1.08-.88-1.96-1.97-1.96H9.3c-1.08 0-2.6.63-3.37 1.4l-37.9 37.62a5.52 5.52 0 0 1-3.37 1.4h-57c-1.1 0-2.61.62-3.38 1.38l-13.2 13.1a5.52 5.52 0 0 1-3.37 1.4h-13.2\"/><path stroke=\"#F4D21F\" d=\"M219.9 357h144.49l76.54.13c1.08 0 1.97.88 1.97 1.96v71.7c0 1.08.89 1.96 1.97 1.96h46.36c1.08 0 2.6-.63 3.37-1.4l74.35-74a5.52 5.52 0 0 1 3.37-1.4h192.33c1.09 0 2.6-.62 3.37-1.38l43.58-43.28a5.52 5.52 0 0 1 3.37-1.39h10.6c1.08 0 2.6.63 3.37 1.4l62.65 62.2c.77.77 2.29 1.4 3.37 1.4h73.87c1.09 0 2.6.63 3.38 1.4l94.12 93.47 9.27.57c.84 0 2.17-.62 2.93-1.39l104.08-89.36a1.97 1.97 0 0 1 2.78 0l6.3 6.25\"/><path stroke=\"#9DCA40\" d=\"M599.92 564.19a6.6 6.6 0 0 0 4.04-1.67l47.94-47.6a6.5 6.5 0 0 0 1.67-4.01V313.84c0-1.3-.75-3.1-1.67-4.02l-47.94-47.6a6.6 6.6 0 0 0-4.04-1.66h-97.84a6.6 6.6 0 0 0-4.05 1.66l-47.93 47.6a6.5 6.5 0 0 0-1.68 4.02v197.07c0 1.29.75 3.1 1.68 4.01l47.93 47.6a6.6 6.6 0 0 0 4.05 1.67h97.84z\"/><path stroke=\"#1EB2D8\" d=\"M648.25 527.17v33.3c0 1.08-.63 2.58-1.4 3.35l-87.37 86.76c-.77.76-.51 1.39.57 1.39h70.82\"/><path stroke=\"#BC6D21\" d=\"M476.04 273.32v-18.86c0-1.08-.63-2.59-1.4-3.35l-30.9-30.68a5.52 5.52 0 0 0-3.37-1.4H274.62\"/><path stroke=\"#9F83B6\" d=\"M923.43 372.6V119.09c0-1.07-.64-2.58-1.4-3.34L757.4-47.74a5.52 5.52 0 0 0-3.37-1.39H351.57c-1.09 0-2.6.63-3.38 1.4L310.5-10.3\"/><path stroke=\"#ED8E3F\" d=\"M317-49.77L304.42-37.3a5.58 5.58 0 0 0-1.42 3.35l-.36 21.45a5.3 5.3 0 0 0 1.36 3.35L493.36 178.9c.77.76 1.4 2.27 1.4 3.35v18.41c0 1.08.89 1.96 1.97 1.96h87.86c1.09 0 1.98.88 1.98 1.96v34.67c0 1.08.88 1.96 1.97 1.96h23.3c1.08 0 2.6.63 3.37 1.4l46.16 45.83c.77.77 1.4 2.28 1.4 3.35v138.64l.07 84.4c0 1.08-.63 2.6-1.38 3.35l-53.63 53.27a5.52 5.52 0 0 1-3.37 1.39H557.9c-1.08 0-2.6.63-3.37 1.39L380.57 746.98a5.52 5.52 0 0 1-3.38 1.39H112.47c-1.09 0-1.97.88-1.97 1.96v93.24c0 1.08-.9 1.96-1.98 1.96h-224.54\"/><path stroke=\"#DA5A98\" d=\"M415.07 612.97l63.3-62.86a5.52 5.52 0 0 1 3.37-1.4h124.67c1.08 0 2.6-.6 3.37-1.37l28.23-27.83a5.35 5.35 0 0 0 1.4-3.33V478.2c0-1.07.89-1.96 1.97-1.96H694c1.09 0 1.97-.88 1.97-1.95v-52.11c0-1.08.64-2.59 1.4-3.35l29.57-29.37a5.45 5.45 0 0 0 1.4-3.35v-76c0-1.08.9-1.96 1.98-1.96h37.9a4 4 0 0 0 4-4v-29.3c0-1.08.63-2.59 1.4-3.35l35.35-35\"/><path stroke=\"#1AA5D0\" d=\"M893.1 374.7L847.5 420a5.52 5.52 0 0 1-3.37 1.38H618.66c-1.09 0-2.6-.62-3.37-1.39l-81.65-81.08a5.52 5.52 0 0 0-3.37-1.39H384.49c-1.08 0-2.6.63-3.37 1.4l-17.14 17.02\"/><path stroke=\"#55B549\" d=\"M288.52 640.2h-46.9c-1.09 0-1.98.88-1.98 1.95v26.65c0 1.07-.89 1.95-1.97 1.95h-89.32\"/><path stroke=\"#D3C452\" d=\"M281.34 229.6l9.65 9.59c.77.76 2.29 1.39 3.37 1.39l146.76-.2c1.09 0 2.6.63 3.38 1.37l115.95 114c.77.76.77 1.99 0 2.75l-37.2 37.05a1.96 1.96 0 0 0 0 2.78l49.62 49.28c.77.77 2.3 1.4 3.38 1.4h138.28c1.08 0 2.6.62 3.37 1.39l37.26 37c.77.76 2.3 1.4 3.38 1.4h21.7\"/><path stroke=\"#9DCA40\" d=\"M-116.02 841.87h216.77c1.09 0 1.97-.89 1.97-1.96v-99.83c0-1.08.9-1.96 1.98-1.96h266.24c1.08 0 2.6-.62 3.37-1.39l20.18-20.04c.77-.76.77-2.02 0-2.76l-78.7-78.2a5.45 5.45 0 0 1-1.4-3.35v-1.57c0-1.07.88-1.96 1.97-1.96l139.22.02c1.09 0 2.6-.62 3.38-1.39l53.7-53.48a4.86 4.86 0 0 1 2.8-1.39c.76 0 1.41-.88 1.41-1.96v-6.62\"/><path stroke=\"#B00D7C\" d=\"M317.92 257.82l73.16 72.65c.77.77 1.4 2.27 1.4 3.35v45.25c0 1.08.63 2.59 1.4 3.35l12.02 11.93c.77.77 2.28 1.4 3.37 1.4h9.86c1.09 0 2.6-.63 3.38-1.4l6.29-6.25a5.52 5.52 0 0 1 3.37-1.39h85.81c1.08 0 2.6-.62 3.37-1.39l63.1-62.66a5.52 5.52 0 0 1 3.38-1.4h161.56c1.08 0 1.97.89 1.97 1.96v178.66c0 1.07-.63 2.58-1.4 3.35l-11.42 11.34a5.52 5.52 0 0 1-3.38 1.39H529.03a1.97 1.97 0 0 1-1.98-1.96v-73.07c0-1.07-.88-1.96-1.97-1.96h-88.26a1.97 1.97 0 0 1-1.97-1.95V406.5c0-1.08-.89-1.96-1.97-1.96-1.99 0-3.5-.63-4.28-1.4l-7.44-7.38\"/><path stroke=\"#DA5A98\" d=\"M650.42-78.35v211.36c0 1.08.63 2.59 1.4 3.35l46.73 46.4c.77.77 1.4 2.28 1.4 3.36v35.79l-2.49-.14c-.75 0-1.97.63-2.74 1.4l-18.32 18.19a5.45 5.45 0 0 0-1.4 3.35v116.95c0 1.07.63 2.58 1.38 3.35l46.53 46.58a5.42 5.42 0 0 1 1.38 3.35l-.02 30.34c0 1.08-.63 2.59-1.4 3.35l-4.91 4.88a5.52 5.52 0 0 1-3.37 1.4H599.52c-1.08 0-1.97.87-1.97 1.95v36c0 1.08-.89 1.96-1.97 1.96h-92.71c-1.09 0-2.6.63-3.38 1.4l-19.58 19.45a5.52 5.52 0 0 1-3.38 1.39h-63.61\"/><path stroke=\"#1EB2D8\" d=\"M281.48 745v84.33c0 1.08-.89 1.96-1.97 1.96h-57.48c-1.09 0-1.98.88-1.98 1.96v10.36c0 1.08-.88 1.96-1.97 1.96H110.52\"/><path stroke=\"#F5C739\" d=\"M10.95 362.32l113.4 112.62c.78.77 2.3 1.4 3.38 1.4h36.12c1.08 0 2.6.62 3.37 1.38l205.45 204.03c.77.76 2.29 1.39 3.37 1.39l62.74.03h29.53c1.09 0 2.6.63 3.37 1.4l16.36 16.23c.77.77 2.29 1.4 3.37 1.4h134.34\"/><path stroke=\"#31B495\" d=\"M275.82 590.44l24.44-24.27a5.52 5.52 0 0 1 3.37-1.4h121.52c1.08 0 2.6.63 3.37 1.4l34.32 34.08c.77.77 2.3 1.4 3.38 1.4h54.36\"/><path stroke=\"#AD7D20\" d=\"M633.41 278.74l-21.36-21.22a5.45 5.45 0 0 1-1.4-3.35V-78.58\"/><path stroke=\"#1F8C43\" d=\"M754.4 192.02v20.11c0 1.08-.9 1.96-1.98 1.96h-94.49c-1.08 0-2.6.63-3.37 1.4l-50.28 49.93a5.45 5.45 0 0 0-1.4 3.35v56.41c0 1.08.63 2.59 1.4 3.35l10.63 10.56c.77.76 1.4 2.27 1.4 3.35v121.45c0 1.08-.89 1.96-1.97 1.96H429.6c-1.08 0-2.6-.62-3.37-1.39l-21.2-21.06-15.77 14.8a5.52 5.52 0 0 1-3.37 1.38H282.15c-1.08 0-2.6.63-3.37 1.37l-62.1 61.3a5.5 5.5 0 0 1-3.37 1.37h-69.85c-1.09 0-2.6.63-3.37 1.4l-68.22 67.73a5.52 5.52 0 0 1-3.37 1.4H34.1c-1.09 0-2.6.62-3.38 1.38l-61.64 61.22a5.45 5.45 0 0 0-1.4 3.35v98.02c0 1.08-.89 1.96-1.97 1.96h-30.76c-1.08 0-2.6.63-3.37 1.4l-48.29 47.95\"/><path stroke=\"#74BB63\" d=\"M184.55 422.03v34.09c0 1.07-.63 2.58-1.4 3.35l-56.48 55.88a5.52 5.52 0 0 1-3.37 1.4H-34.6\"/><path stroke=\"#E5683E\" d=\"M980.12 416.59l-15.05-14.95a5.52 5.52 0 0 0-3.38-1.4h-46.04c-1.08 0-2.6.63-3.37 1.4l-14.5 14.4c-.77.76-1.4.5-1.4-.57v-34.93c0-1.08-.63-2.58-1.4-3.35l-2.48-2.47\"/><path stroke=\"#DA5A98\" d=\"M826.77 238.25v54.43c0 1.08.63 2.59 1.4 3.35l86.38 85.78c.77.77 2.29 1.4 3.37 1.4h98.61c1.09 0 2.6-.63 3.36-1.4l22.6-22.8a5.47 5.47 0 0 1 3.36-1.39h106.38c1.08 0 1.97-.88 1.97-1.96l.04-95.24c0-1.08.89-1.96 1.97-1.96h39.02c1.09 0 1.97.88 1.97 1.96v48.1\"/><path stroke=\"#E6632A\" d=\"M12.87 361.05h-5c-1.1 0-2.61-.63-3.38-1.4l-17.72-17.58a5.52 5.52 0 0 0-3.37-1.4h-16.9c-1.09 0-2.6-.62-3.38-1.38l-55.64-55.26a5.52 5.52 0 0 0-3.38-1.4h-15.19\"/><path stroke=\"#3EB373\" d=\"M959.23 126.08l19.2 19.06c.76.76 2.28 1.39 3.36 1.39h177.42c1.09 0 1.97.88 1.97 1.96v100.84a3 3 0 0 0 3 3h36.42c1.08 0 1.97.88 1.97 1.96v54.65\"/><path stroke=\"#2765B0\" d=\"M33.17 798.75h242.12c1.08 0 1.97-.88 1.97-1.96V672.9c0-1.08-.89-1.96-1.97-1.96h-30.12a1.97 1.97 0 0 1-1.98-1.96v-26.76c0-1.07-.88-1.96-1.97-1.96h-20.87\"/><path stroke=\"#EB9D12\" d=\"M458.48 496.1h9.55c1.09 0 2.6-.63 3.37-1.4l48.23-47.83a5.52 5.52 0 0 1 3.38-1.39h24.26c1.08 0 2.6.63 3.37 1.39l23.26 23.1c.77.76 2.29 1.39 3.37 1.39h111.06c1.09 0 1.97-.88 1.97-1.96v-54.46c0-1.08-.63-2.59-1.4-3.33l-20.35-20.04-2.8-2.76-1.17-1.16a5.52 5.52 0 0 0-3.37-1.39h-11.66a1.97 1.97 0 0 1-1.97-1.96V310.6c0-1.08.88-1.96 1.97-1.96h77.38\"/><path stroke=\"#9DCA40\" d=\"M-34.94 402.19v111.19c0 1.07.63 2.58 1.4 3.35l49.06 48.71c.76.77 2.28 1.4 3.37 1.4h21.8c1.08 0 2.6.62 3.37 1.39l113 112.22c.78.77 2.3 1.4 3.38 1.4h170.6c1.08 0 1.97.87 1.97 1.95v60.41\"/></g></svg>\n</div>",
          "elState": "const svgPath = this.$$('path'), l = svgPath.length;\n\nfor (let i = 0; i < l; i++) {\n  const pathLen = Math.round(svgPath[i].getTotalLength());\n  svgPath[i].setAttribute('stroke-dasharray', pathLen);\n  svgPath[i].style.strokeDashoffset = pathLen + 'px';\n\n  Sifrr.animate.loop(() => Sifrr.animate.keyframes([{\n    target: svgPath[i],\n    to: {\n      style: {\n        'stroke-dashoffset': [pathLen + 'px', '0px']\n      }\n    },\n    time: i => 1000 + Math.random() * 2000,\n    delay: i => Math.random() * 2000\n  }, {\n    target: svgPath[i],\n    to: {\n      style: {\n        'stroke-dashoffset': ['0px', pathLen + 'px']\n      }\n    },\n    time: i => 1000 + Math.random() * 2000,\n    delay: i => Math.random() * 2000\n  }]));\n}\n\n\nreturn {};\n"
        },
        {
          "variantId": 3,
          "variantName": "ripple part 2",
          "style": "#element #parent {\n  white-space: nowrap;\n  font-size: 0;\n  line-height: 0;\n}\n\n#element #parent * {\n  padding: 10px;\n  background: white;\n  width: 30px;\n  height: 30px;\n  font-size: 10px;\n  display: inline-block;\n  margin: 20px;\n  border-radius: 15px;\n}\n\n#element > div {\n  position: relative;\n}\n\n#element #back {\n  background: orange;\n  width: 40px;\n  height: 40px;\n  border-radius: 50px;\n  position: absolute;\n  z-index: 2;\n}",
          "code": "<div>\n<div id=\"back\" style=\"left: 15px; top: 15px;\"></div>\n<div id=\"parent\">\n  <div></div>\n  <div></div>\n  <div></div>\n  <div></div>\n  <div></div>\n  <div></div>\n  <div></div>\n  <div></div>\n  <div></div>\n<br>\n  <div></div>\n  <div></div>\n  <div></div>\n  <div></div>\n  <div></div>\n  <div></div>\n  <div></div>\n  <div></div>\n  <div></div>\n<br>\n  <div></div>\n  <div></div>\n  <div></div>\n  <div></div>\n  <div></div>\n  <div></div>\n  <div></div>\n  <div></div>\n  <div></div>\n<br>\n  <div></div>\n  <div></div>\n  <div></div>\n  <div></div>\n  <div></div>\n  <div></div>\n  <div></div>\n  <div></div>\n  <div></div>\n<br>\n  <div></div>\n  <div></div>\n  <div></div>\n  <div></div>\n  <div></div>\n  <div></div>\n  <div></div>\n  <div></div>\n  <div></div>\n<br>\n  <div></div>\n  <div></div>\n  <div></div>\n  <div></div>\n  <div></div>\n  <div></div>\n  <div></div>\n  <div></div>\n  <div></div>\n<br>\n  <div></div>\n  <div></div>\n  <div></div>\n  <div></div>\n  <div></div>\n  <div></div>\n  <div></div>\n  <div></div>\n  <div></div>\n</div>\n</div>\n",
          "elState": "const children = this.$$('#parent div'), l = children.length, back = this.$('#back');\n\nfunction ripple(maxWidth, x, y, timeDiff) {\n  return i => {\n    const x_c = Math.abs((i % maxWidth) - x);\n    const y_c = Math.abs(Math.floor(i / maxWidth) - y);\n    const max_c = Math.max(x_c, y_c);\n    return max_c * timeDiff\n  }\n}\n\nasync function startRipple(x, y) {\n  await Sifrr.animate.animate({\n    target: back.style,\n    to: {\n      left: (x * 70 + 15) + 'px',\n      top: (y * 70 + 15) + 'px',\n      transform: 'scale3d(1,1,1)'\n    }\n  }).then(() => Sifrr.animate.animate({\n    target: back.style,\n    to: { \n      transform: ['scale3d(1,1,1)', 'scale3d(0.7,0.7,0.7)']   \n}\n  }));\n\n  const delay = ripple(9, x, y, 150), promises = [];\n  for (let i = 0; i < l; i++) {\n    let c = children[i];\n    promises.push(Sifrr.animate.keyframes([{\n      target: c,\n      to: {\n        style: {\n          transform: ['scale3d(1,1,1)', 'scale3d(2,2,2)']\n        }\n      },\n      type: 'ease',\n      time: 500,\n      delay: delay(i)\n    }, {\n        target: c,\n      to: {\n        style: {\n          transform: ['scale3d(2,2,2)', 'scale3d(1,1,1)']\n        }\n      },\n      type: 'ease',\n      time: 500,\n      delay: 30\n    }]));\n  };\n  return Promise.all(promises);\n}\n\nSifrr.animate.loop(() => startRipple(Math.round(Math.random() * 8), Math.round(Math.random() * 6)));\n\n"
        },
        {
          "variantId": 4,
          "variantName": "move on cosine graph",
          "style": "#element #graph {\n  background-color: white;\n  width: 500px;\n  height: 500px;\n  position: relative;\n}\n\n#canvas {\n  position: absolute;\n}\n\n#point {\n  border-radius: 5px;\n  width: 10px;\n  height: 10px;\n  position: absolute;\n  background-color: green;\n  z-index: 5;\n}\n",
          "code": "<div id=\"graph\">\n  <svg id=\"canvas\" data-trusted=\"1\" style=\"height: 500px; width: 500px\">\n    <path d=\"M0,500 C182,500 318,0 500,0\" stroke=\"black\" stroke-width=\"2px\" fill=\"none\"/>\n  </svg>\n  <div id=\"point\" style=\"bottom: -5px; left: -5px;\"></div>\n</div>",
          "elState": "Sifrr.animate.animate({\n  target: this.$('#point').style,\n  to: {\n    bottom: '495px'\n  },\n  type: 'spring',\n  time: 1000\n});\n\nSifrr.animate.animate({\n  target: this.$('#point').style,\n  to: {\n    left: '495px'\n  },\n  type: 'linear',\n  time: 1000\n});\n\nreturn {\n\n}"
        },
        {
          "variantId": 5,
          "variantName": "spring loop",
          "style": "#point {\n  border-radius: 5px;\n  width: 10px;\n  height: 10px;\n  background-color: green;\n  z-index: 5;\n}\n",
          "code": "<p id=\"point\" style=\"bottom: -5px; left: -5px; transform: translateX(0px)\"></p>\n",
          "elState": "Sifrr.animate.loop(() => Sifrr.animate.keyframes([{\n  target: this.style,\n  to: {\n    transform: 'translateX(+=100px)'\n  }\n}, {\n  target: this.style,\n  to: {\n    transform: 'translateX(-=100px)'\n  }\n}]));\n\nreturn {\n\n}"
        }
      ],
      "element": "codepen examples",
      "variantName": "handwritten text",
      "variantId": 1,
      "style": "#element h3 {\n  width: 500px;\n}",
      "code": "<h3>\n  <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 229.2 69.6\" style=\"enable-background:new 0 0 229.2 69.6;\" xml:space=\"preserve\">\n\t\t\t\t\t\t\t\t\t\t\t<defs>\n\t\t\t\t\t\t\t\t\t\t\t\t<clipPath id=\"websiteClip\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<path d=\"M79.7,29.1C74.3,36,67.5,43.8,59.3,52.5c-7.1,7-11.8,11.2-13.8,12.6c-4.6,3.5-7.9,5.3-9.8,5.3h-0.4c-2.9,0-4.8-1-5.6-3\n\t\t\t\t\t\t\t\t\t\t\t\t\tc-0.1-0.5-0.2-0.8-0.2-1v-0.6c0-2.2,1.8-6.5,5.5-12.8l7.8-14.3C31.4,49.5,23.8,57,19.8,60.8c-1.8,0-3.4-0.6-4.8-1.8\n\t\t\t\t\t\t\t\t\t\t\t\t\tc-0.6-0.7-0.9-1.7-0.9-2.9c0-2.3,1.8-6.5,5.4-12.6c8-14.7,13.4-24.7,16.3-30.1h-0.2c-5.9,0.7-13,4.1-21.1,10c-1.4,0.9-3.4,2.7-6,5.5\n\t\t\t\t\t\t\t\t\t\t\t\t\tV29c0.5,1.3,1.3,2.2,2.5,2.9c1.5,0.5,3,0.7,4.5,0.7c0.2,0,0.6,0,0.9,0.1c0,0.9-1.6,1.9-4.8,3.1c-1.7,0.5-3.1,0.7-4.2,0.7H6.9\n\t\t\t\t\t\t\t\t\t\t\t\t\tc-2.5,0-4.2-2.8-4.9-8.4c-0.1-0.3-0.1-0.8-0.1-1.6v-1.1c0-2.5,0.9-4.5,2.8-5.9c1.8-1.7,4.1-3.4,7-5.1c4-2.3,9.3-4.5,15.8-6.6\n\t\t\t\t\t\t\t\t\t\t\t\t\tc4.8-1.2,8.6-1.8,11.5-1.8c1.5,0.2,2.9,0.8,4,1.8c1.7,1.6,2.6,3.6,2.6,5.9c0,0.3-2.3,4.5-6.9,12.6c-0.8,1.5-4.3,8-10.6,19.4v0.1\n\t\t\t\t\t\t\t\t\t\t\t\t\tc7.8-7.3,15.2-14.3,22.1-20.9C56,14,59.2,7.7,59.5,6.1c1.4,0.2,2.7,0.7,4,1.7c1.8,1.5,2.7,3.6,2.7,6.2v0.1\n\t\t\t\t\t\t\t\t\t\t\t\t\tC49.7,44,41.2,59.4,40.8,60.4c1.8-1.6,4.3-4.2,7.7-7.8c9.4-10.6,18.4-22,27.2-34C82,9.8,85.6,3.9,86.4,1c0.1-0.4,0.1-0.8,0.1-1.1\n\t\t\t\t\t\t\t\t\t\t\t\t\tv-0.1c0.1-0.1,0.1-0.1,0.2-0.1c1.5,0.4,3.1,1.4,4.9,3c1.8,2.3,2.8,4.1,2.8,5.3C91.5,13.2,86.6,20.2,79.7,29.1z M125.8,40\n\t\t\t\t\t\t\t\t\t\t\t\t\tc-0.7,1.3-1.2,2.3-1.6,3c-0.6,1-1.2,2.3-2,3.8l-2.1,3.7c-1.8,3.2-3.2,5.7-4.1,7.6c-1.5,2.8-4.1,3.4-7.7,2c-1.5-0.6-2.8-1.4-4-2.5\n\t\t\t\t\t\t\t\t\t\t\t\t\tc-1.2-1.2-2.1-2.3-2.5-3.4l-3.6,6.6c-4.5-0.4-6.3-2.4-5.6-6c-1.1,0.8-2.1,1.5-3,2.1C86,59,83,60.3,80.9,60.6\n\t\t\t\t\t\t\t\t\t\t\t\t\tc-0.7,0.1-1.3,0.2-1.8,0.2h-0.4c-1.8,0-3.4-0.7-4.7-2c-1.4-1.8-2.1-4.1-2.1-6.6v-0.6c0-3.1,1.1-7,3.2-11.5\n\t\t\t\t\t\t\t\t\t\t\t\t\tc3.5-7.4,8.1-12.8,13.8-16.2c1-0.6,2-1,3-1.5c0.9-0.4,1.4-0.6,1.6-0.6c0.7,0,1.9,0.2,3.4,0.6c0.7,0.2,1.5,0.4,2.2,0.7\n\t\t\t\t\t\t\t\t\t\t\t\t\tc2.5,1.2,3.8,3,3.8,5.4v0.4c0,1.6-0.6,3.5-1.9,5.7c-2.3,3.7-5.4,6.8-9.5,9.4l-8.3,0.2c-0.7,0.9-1.2,1.7-1.6,2.4\n\t\t\t\t\t\t\t\t\t\t\t\t\tc-1.5,2.7-2.3,5-2.6,6.9c0.1,0.3,0.4,0.5,0.9,0.5H80c1.4,0,3.9-0.9,7.6-2.6c2.6-1.2,5.4-2.9,8.3-5.1c0.4-0.3,0.8-0.6,1.2-0.9\n\t\t\t\t\t\t\t\t\t\t\t\t\tc0.6-1.2,1.1-2,1.4-2.6c0.7-1.4,2.2-4.1,4.5-8.3l0.7-1.4l0.8-1.4l1.6-2.9c1.2-2.3,2.3-4.2,3.2-5.9c5.4-9.8,8-15.1,7.9-15.9\n\t\t\t\t\t\t\t\t\t\t\t\t\tc2,0.2,3.6,1,4.8,2.6c1.3,1.5,1.8,3.2,1.7,5.2l-11.9,21.5c0.9-0.8,2-1.8,3.3-3l1.7-1.5l1.7-1.6c2.6-2.4,4.6-4.2,6-5.4\n\t\t\t\t\t\t\t\t\t\t\t\t\tc4.6,0.4,6.4,2.6,5.4,6.6c-0.4,1.5-1.2,3.4-2.4,5.7l-0.8,1.5L125.8,40z M85.4,38.8l4,0.2c0.9-0.3,1.7-0.7,2.4-1.2\n\t\t\t\t\t\t\t\t\t\t\t\t\tc0.3-0.2,0.8-0.6,1.5-1.3c0.7-0.8,1.2-1.6,1.6-2.4c0.7-1.5,1.1-2.8,1.1-3.9c0-0.7-0.2-1.1-0.6-1.3h-0.2c-0.8,0.1-1.8,0.7-3.1,1.8\n\t\t\t\t\t\t\t\t\t\t\t\t\tc-1.3,1.2-2.2,2.1-2.9,2.8C87.7,35.4,86.4,37.1,85.4,38.8z M119.9,35.9l-13.6,11.5c-0.3,0.2-0.6,0.4-0.9,0.6l-0.4,0.6\n\t\t\t\t\t\t\t\t\t\t\t\t\tc0.2,1.7,0.7,3,1.5,4c0.9,1,1.8,1.4,3,1.1L119.9,35.9z M227.8,43.1v0.6c0,1.2-0.4,2.2-1.1,3h-0.1c-0.2-0.7-0.6-1.3-1.2-1.8\n\t\t\t\t\t\t\t\t\t\t\t\t\tc-0.7-0.3-1.3-0.5-1.8-0.5H223c-3.2,0-9.8,2.8-19.8,8.5c-9,5.2-14.8,7.8-17.3,7.8h-0.3c-3.4,0-5.6-1.9-6.7-5.6\n\t\t\t\t\t\t\t\t\t\t\t\t\tc-0.2-1.1-0.4-2.2-0.4-3.1v-0.5c0-1.4,0.2-3,0.6-4.6c-4.3,3.9-9,8.2-14.3,13c-0.6,0.6-0.9,0.8-0.9,0.8c-1.7,0-3.1-0.5-4.4-1.5\n\t\t\t\t\t\t\t\t\t\t\t\t\tc-0.7-0.8-1.1-1.7-1.1-2.6v-0.6c0-1.7,1.3-5,4-9.8c-4.1,3.8-8.2,7.5-12.4,11.2c-2.3,2.2-3.6,3.3-3.7,3.3c-1.3,0-2.6-0.4-4-1.1\n\t\t\t\t\t\t\t\t\t\t\t\t\tc-1.2-0.8-1.8-1.9-1.8-3.2v-0.4c0-2.2,1.5-5.8,4.4-10.9c0.7-1.2,1.4-2.5,2.2-3.9c-2.6,1.1-4.9,2.2-7,3.3c0.3,1.7,0.5,3.2,0.5,4.7\n\t\t\t\t\t\t\t\t\t\t\t\t\tv0.3c0,3.4-0.9,6.4-2.7,8.9c-1.5,1.6-3.2,2.4-5.3,2.4h-0.4c-1.9,0-3.7-0.7-5.3-2.2c-0.8-0.9-1.4-1.8-1.7-2.6\n\t\t\t\t\t\t\t\t\t\t\t\t\tc-0.3-0.9-0.5-1.8-0.5-2.5v-0.4c0-0.9,0.2-1.9,0.6-3c0-0.1,0.1-0.2,0.3-0.4c2.5-2,5-3.8,7.5-5.4c-2-3.7-3-6-3-6.9c0-0.2,0-0.6,0-1.1\n\t\t\t\t\t\t\t\t\t\t\t\t\tc0-3,1.6-6.3,4.8-9.8c1.6-1.6,2.8-2.7,3.7-3.2c1.7-1.3,3.6-2.5,5.6-3.5c1.1-0.6,2.1-1.1,2.9-1.4c1.7,0.6,3.3,1.9,4.6,4\n\t\t\t\t\t\t\t\t\t\t\t\t\tc0.4,0.6,0.7,1.3,1,2.1l0.2,0.4c-2.8,0.9-5,1.8-6.8,2.9c-4.9,2.8-7.4,6.2-7.4,10.2c0,0.9,0.1,1.8,0.4,2.8c4.9-2.9,8.8-4.9,11.6-6\n\t\t\t\t\t\t\t\t\t\t\t\t\tc0.8-1.5,1.7-3,2.7-4.7c1.6-3,2.4-4.9,2.5-5.9h0.1c1.2,0.1,2.5,0.6,3.7,1.5c1,0.9,1.6,1.6,1.8,2c0.7,1.3,1.1,2.5,1.1,3.7l-0.1,0.3\n\t\t\t\t\t\t\t\t\t\t\t\t\tv0.4c-0.2,0.4-1.6,2.9-4.2,7.5l-5.2,9.1l12.1-11.1c0.7-0.4,1.4-0.6,1.8-0.6h0.4l9-16.4h-0.1c-2.4,0-4.5,0.1-6.4,0.2\n\t\t\t\t\t\t\t\t\t\t\t\t\tc-0.4-0.2-0.7-0.5-0.9-0.9c-1,1.1-2.2,2.2-3.4,3.5c-2.1-0.3-3.9-0.7-5.4-1.2c-0.5-0.2-1-0.4-1.6-0.6v-0.1c2.3-5.4,3.6-8.5,4-9.3\n\t\t\t\t\t\t\t\t\t\t\t\t\tc1.5-0.2,2.9-0.3,4.2-0.3h1.2c2.7,0,5.3,0.3,7.8,0.8v0.1c-0.4,0.4-2.1,2.1-4.9,5.1l7.3-0.8c3-5.5,4.5-8.6,4.5-9.3\n\t\t\t\t\t\t\t\t\t\t\t\t\tc1.2,0,2.5,0.6,4.1,1.8c1.5,1.5,2.3,3.3,2.3,5.4c0,0.4-0.2,1-0.6,1.6c1.2-0.1,2-0.1,2.6-0.1h2.8c0.1,0,0.1,0.1,0.1,0.2\n\t\t\t\t\t\t\t\t\t\t\t\t\tc-1.2,2.8-1.9,4.3-1.9,4.3h-0.1c-1.7-0.1-3.5-0.2-5.6-0.4l-16,28.7h0.1c7.9-7.4,12-11.1,12.1-11.2c0,0,0,0,0.1,0\n\t\t\t\t\t\t\t\t\t\t\t\t\tc0.7-1.4,1.6-2.9,2.5-4.4c1.1-1.6,2.6-3.4,4.5-5.4c2.2-2.2,4-3.6,5.4-4.3c1.4-0.9,3-1.8,4.9-2.5c0.2-0.1,0.3-0.1,0.4-0.1\n\t\t\t\t\t\t\t\t\t\t\t\t\tc1.8,0,3.8,0.5,5.9,1.4c2.5,1.2,3.7,3,3.7,5.5c0,3.2-2,6.9-6,11.2c-2.3,2.2-4.2,3.6-5.5,4.3c-0.4,0.1-0.7,0.1-0.7,0.1\n\t\t\t\t\t\t\t\t\t\t\t\t\tc-1.2,0-3.8,0-7.8,0.1c-2.1,2.8-3.5,6-4.2,9.4c0,0.3,0.6,0.6,1.7,0.7c0,0.1,0.2,0.1,0.7,0.1h0.5c0.1,0,0.1,0,0.2,0\n\t\t\t\t\t\t\t\t\t\t\t\t\tc3.1,0,7.8-2.7,13.8-8.1c5.1-4.6,8.7-7.5,10.9-8.8c2-1.1,3.7-1.7,5.1-1.7c4.1,0,7,1.7,8.6,5C227.7,41.5,227.8,42.4,227.8,43.1z\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tM192.3,38.5c0.4,0,1.7,0,4.1,0.1c1.1-0.2,2.2-0.9,3.4-2c2.1-2.3,3.1-4.6,3.1-6.9c-0.1-0.8-0.3-1.2-0.7-1.2\n\t\t\t\t\t\t\t\t\t\t\t\t\tC199.4,29.3,196.1,32.7,192.3,38.5z M134.8,47.9c-0.7,0.5-1.6,1.3-2.7,2.3c-0.6,0.6-1,1.2-1.4,1.8c1.5-0.4,2.6-1,3.4-1.8\n\t\t\t\t\t\t\t\t\t\t\t\t\tc0.4-0.5,0.6-1,0.6-1.7V47.9z\"/>\n\t\t\t\t\t\t\t\t\t\t\t\t</clipPath>\n\t\t\t\t\t\t\t\t\t\t\t</defs>\n\t\t\t\t\t\t\t\t\t\t\t<path clip-path=\"url(#websiteClip)\" d=\"M18.5,33.91S0,36.67,6.67,24.17c8-8.34,22.15-15.46,31.31-13.62,8.34,1-.95,9.34-8.81,24.5C23.34,46.29,15.08,55.23,18.5,57c1.67.86,12-8.3,21.33-20C49.55,24.8,58.23,9.57,61.17,9.5,67.83,9.33,49.88,35.43,40.83,52c-4.14,7.59-10.66,14.17-6.66,15.5C38,68.77,49.17,64,83,15.67c1.59-2.27,7-10.49,8.6-13\" fill=\"none\" stroke=\"#FFFFFF\" stroke-width=\"15\"/>\n\t\t\t\t\t\t\t\t\t\t\t<path clip-path=\"url(#websiteClip)\" d=\"M85.4,41.5s18.1-5.6,13.35-15.75c-2.89-6.18-9,.9-15.5,8.2,0,0-25.5,39.2,14.25,16,0,0,24.37-22.26,28.5-21.05,1.62,1.09-4.14,11-8,19-2.71,5.63-3,10.83-5.55,9.39-24,.28,15.13-45.9,9.21-48.09S94.4,63,94.4,63\" fill=\"none\" stroke=\"#FFFFFF\" stroke-width=\"9\"/>\n\t\t\t\t\t\t\t\t\t\t\t<path clip-path=\"url(#websiteClip)\" d=\"M150.24,20.5S138,26.75,136,31.75s-4.07,5,.43,13.1a9.25,9.25,0,0,1-.18,7.15c-1.75,3.5-2,9.75-7.75,5.75S134.24,42,150.24,37.5c0,0,4.41-4.3,8.51-8.6s-17.5,26-15.88,31.9L173.5,35.19,186.15,9.13s-28,50.42-25.1,51S178.75,38,195.5,41c0,0,20.9-14.33,5-15.75,0,0-26.5,15.25-17,31.25,0,0,8.5,3,18-4.5s22.5-21.2,24.75-4.1\" fill=\"none\" stroke=\"#FFFFFF\" stroke-width=\"10\"/>\n\t\t\t\t\t\t\t\t\t\t\t<path clip-path=\"url(#websiteClip)\" d=\"M171,9.13s-11.33,10.38-8,11.92,43-2.8,43-2.8\" fill=\"none\" stroke=\"#FFFFFF\" stroke-width=\"13\"/>\n\t\t\t\t\t\t\t\t\t\t</svg>\n</h3>",
      "elState": "const svgPath = this.$$('svg > path'), l = svgPath.length;\n\nfor (let i = 0; i < l; i++) {\n  const pathLen = Math.round(svgPath[i].getTotalLength());\n  svgPath[i].setAttribute('stroke-dasharray', pathLen);\n  svgPath[i].style.strokeDashoffset = pathLen + 'px';\n}\n\nfunction animateOptions(front = true) {\n  return {\n    targets: svgPath,\n    to: function(i) {\n      let fromTo = [this.getAttribute('stroke-dasharray') + 'px', '0px'];\n      if (!front) fromTo.reverse();\n      return {\n        style: {\n          'stroke-dashoffset': fromTo\n        }\n      }\n    },\n    time: 700,\n    delay: i => front ? i * 500 : (l - i - 1) * 500\n  }\n}\n\nSifrr.animate.loop(() => Sifrr.animate.keyframes([animateOptions(), animateOptions(false)]));\n\nreturn {};\n"
    }
  ],
  "currentSC": {
    "id": 1,
    "name": "simple",
    "element": "sifrr-shimmer",
    "elementUrl": "",
    "isjs": true,
    "variantName": "relative",
    "variants": [
      {
        "variantId": 1,
        "style": "#element > p {\n  padding: 10px;\n  background: white;\n}",
        "code": "<p></p>",
        "elState": "// this = first element in given html\nSifrr.animate.animate({\n  target: this, \n  to: {\n    textContent: ['a 0 b 25 c 100', 'a 10 b 125 c 1017']\n  },\n  time: 1000,\n  round: true\n});",
        "variantName": "animate text content"
      },
      {
        "variantId": 2,
        "variantName": "animate style",
        "style": "#element > div {\n  padding: 10px;\n  background: white;\n  width: 60px;\n}",
        "code": "<div style=\"transform: translate(0px, 0px)\">move</div>",
        "elState": "// this = first element in given html\nSifrr.animate.animate({\n  target: this,\n  to: {\n    style: {\n      transform: 'translate(100px, 0px)'\n    }\n  },\n  time: 300,\n  type: 'easeOut'\n});"
      },
      {
        "variantId": 3,
        "variantName": "promise based",
        "style": "#element > * {\n  padding: 10px;\n  background: white;\n  width: 60px;\n}",
        "code": "<div style=\"transform: translate(50px, 0px);\">move</div>\n<p></p>",
        "elState": "// this = first element in given html\n// this = first element in given html\nSifrr.animate.animate({\n  target: this.style, \n  to: {\n    transform: 'translate(100px, 0px)'\n  },\n  time: 300,\n  type: 'easeOut'\n}).then(() => {\n  this.nextElementSibling.textContent ='moved';\n});"
      },
      {
        "variantId": 13,
        "variantName": "relative",
        "style": "#element > * {\n  padding: 10px;\n  background: white;\n  width: 60px;\n}",
        "code": "<div style=\"transform: translate(500px, 0px);\">move</div>",
        "elState": "// this = first element in given html\n// this = first element in given html\nSifrr.animate.animate({\n  target: this.style, \n  to: {\n    transform: 'translate(+=100px, 0px)'\n  },\n  time: 300,\n  type: 'easeOut'\n});"
      },
      {
        "variantId": 7,
        "variantName": "delay",
        "style": "#element > * {\n  padding: 10px;\n  background: white;\n  width: 70px;\n}",
        "code": "<div style=\"transform: translate(50px, 0px);\">move</div>\n<p></p>",
        "elState": "// this = first element in given html\n// this = first element in given html\nthis.nextElementSibling.textContent ='waiting';\nSifrr.animate.animate({\n  target: this.style, \n  to: {\n    transform: 'translate(100px, 0px)'\n  },\n  time: 1000,\n  type: 'easeOut',\n  delay: 1000,\n  onUpdate: () =>  this.nextElementSibling.textContent ='moving'\n}).then(() => {\n  this.nextElementSibling.textContent ='moved';\n}).catch(console.log);"
      },
      {
        "variantId": 4,
        "variantName": "multiple to same value",
        "style": "#element > * {\n  padding: 10px;\n  background: white;\n  width: 60px;\n}",
        "code": "<div style=\"transform: translate(0px, 0px); width: 100px;\">move</div>\n<p style=\"transform: translate(50px, 0px); width: 100px;\"></p>",
        "elState": "// this = first element in given html\nconst elements = Array.from(this.parentNode.children);\n\nSifrr.animate.animate({\n  targets: elements,\n  to: {\n    style: {\n      transform: 'translate(100px, 50px)',\n      width: '300px'\n    }\n  }\n});\n"
      },
      {
        "variantId": 5,
        "variantName": "custom types",
        "style": "#element > * {\n  padding: 10px;\n  background: white;\n  width: 60px;\n}",
        "code": "<div>0</div>\n<div>0</div>",
        "elState": "// this = first element in given html\n\n// bezier array\nSifrr.animate.animate({\n  target: this,\n  to: {\n    style: {\n      transform: 'translateX(100px)'\n    },\n    textContent: 100\n  },\n  type: [0,1.4,.96,1.17],\n  time: 1000,\n  round: true\n});\n\n// function\nSifrr.animate.animate({\n  target: this.nextElementSibling,\n  to: {\n    style: {\n      transform: 'translateX(100px)'\n    },\n    textContent: 100\n  },\n  type: i => 1.5 * i,\n  time: 1000,\n  round: true\n});\n"
      },
      {
        "variantId": 6,
        "variantName": "staggering",
        "style": "#element > #parent * {\n  padding: 10px;\n  background: white;\n  width: 60px;\n}",
        "code": "<div id=\"parent\">\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n</div>",
        "elState": "const children = this.children;\n\nSifrr.animate.animate({\n  targets: children,\n  to: {\n    style: {\n      transform: 'translateX(100px)'\n    },\n    textContent: 100\n  },\n  type: [0,1.4,.96,1.17],\n  time: 500,\n  round: true,\n  delay: i => i * 200\n});"
      },
      {
        "variantId": 8,
        "variantName": "wave",
        "style": "#element > #parent * {\n  padding: 10px;\n  background: white;\n  width: 30px;\n  font-size: 10px;\n  display: inline-block;\n  margin: 30px;\n}",
        "code": "<div id=\"parent\">\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n<br>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n<br>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n<br>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n<br>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n</div>",
        "elState": "const children = this.$$('div');\n\nSifrr.animate.animate({\n  targets: children,\n  to: {\n    style: {\n      transform: ['scale3d(1,1,1)', 'scale3d(2,2,2)']\n    }\n  },\n  type: 'ease',\n  time: 300,\n  delay: i => {\n    return (i % 5) * 200\n  }\n});"
      },
      {
        "variantId": 9,
        "variantName": "ripple",
        "style": "#element > #parent * {\n  padding: 10px;\n  background: white;\n  width: 30px;\n  font-size: 10px;\n  display: inline-block;\n  margin: 20px;\n}",
        "code": "<div id=\"parent\">\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n<br>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n<br>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n<br>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n<br>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n<br>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n<br>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n</div>",
        "elState": "const children = this.$$('div');\n\nfunction ripple(maxWidth, x, y, timeDiff) {\n  return i => {\n    const x_c = Math.abs((i % maxWidth) - x);\n    const y_c = Math.abs(Math.floor(i / maxWidth) - y);\n    const max_c = Math.max(x_c, y_c);\n    return max_c * timeDiff\n  }\n}\n\nSifrr.animate.animate({\n  targets: children,\n  to: {\n    style: {\n      transform: ['scale3d(1,1,1)', 'scale3d(2,2,2)']\n    }\n  },\n  type: 'ease',\n  time: 300,\n  delay: ripple(9, 2, 3, 150)\n});"
      },
      {
        "variantId": 10,
        "variantName": "function values",
        "style": "#element > #parent * {\n  padding: 10px;\n  background: white;\n  width: 30px;\n  height: 30px;\n  font-size: 10px;\n  display: inline-block;\n  margin: 30px;\n}",
        "code": "<div id=\"parent\">\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n  <div>0</div>\n</div>",
        "elState": "const children = this.$$('div');\n\nSifrr.animate.animate({\n  targets: children,\n  to: (i) => {\n    return {\n      style: {\n        height: ['30px', (40 + i * 10) + 'px']\n      }\n    }\n  },\n  type: 'ease',\n  time: i => (i + 1) * 100,\n  delay: i => i * 100\n});"
      },
      {
        "variantId": 11,
        "variantName": "color",
        "style": "#element > #parent {\n  padding: 10px;\n  background: rgb(10,100,245);\n  width: 30px;\n  height: 30px;\n}",
        "code": "<div id=\"parent\">\n</div>",
        "elState": "Sifrr.animate.animate({\n  target: this,\n  to: {\n    style: {\n      background: ['rgb(10,100,245)', 'rgb(67,205,155)']\n    }\n  },\n  type: 'ease',\n  time: 4000\n});"
      },
      {
        "variantId": 12,
        "variantName": "attribute",
        "style": "#element > #parent {\n  padding: 10px;\n  background: rgb(10,100,245);\n  width: 30px;\n  height: 30px;\n  border-radius: 1px;\n}",
        "code": "<div id=\"parent\" style=\"border-radius: 1px\">\n</div>",
        "elState": "Sifrr.animate.animate({\n  target: this,\n  to: {\n    styleattribute: ['border-radius: 1px', 'border-radius: 15px']\n  },\n  type: 'ease',\n  time: 3000,\n  onUpdate: (e, n, v) => e.setAttribute(n.slice(0, 5), v)\n});"
      }
    ],
    "variantId": 13,
    "style": "#element > * {\n  padding: 10px;\n  background: white;\n  width: 60px;\n}",
    "code": "<div style=\"transform: translate(500px, 0px);\">move</div>",
    "elState": "// this = first element in given html\n// this = first element in given html\nSifrr.animate.animate({\n  target: this.style, \n  to: {\n    transform: 'translate(+=100px, 0px)'\n  },\n  time: 300,\n  type: 'easeOut'\n});",
    "current": 0
  }
}
